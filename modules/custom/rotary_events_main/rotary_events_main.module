<?php

use Drupal\Core\Form\FormStateInterface;

/**
 * @file
 * Contains rotary_events_main.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\user\Entity\User;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_help().
 */
function rotary_events_main_help($route_name, RouteMatchInterface $route_match)
{
    switch ($route_name) {
            // Main module help for the rotary_events_main module.
        case 'help.page.rotary_events_main':
            $output = '';
            $output .= '<h3>' . t('About') . '</h3>';
            $output .= '<p>' . t('Event Entities and hooks') . '</p>';
            return $output;

        default:
    }
}

function rotary_events_main_user_login(\Drupal\user\UserInterface $account)
{
    if (in_array("registrant", \Drupal::currentUser()->getRoles())) {
        $account = User::load(\Drupal::currentUser()->id());
        if ($account->get("field_payment_status")->value == "InformationSubmitted") {
            $response = new RedirectResponse("/admin/content/payment_acknowledgement/add/default");
            $response->send();
        } else if ($account->get("field_payment_status")->value == "PendingFinanceReview") {
            $response = new RedirectResponse("/waiting-for-review");
            $response->send();
        } else if ($account->get("field_payment_status")->value == "ConfirmedRegistration") {
            $response = new RedirectResponse("/qr-codes");
            $response->send();
        }
    }
}



function rotary_events_main_payment_acknowledgement_insert(\Drupal\Core\Entity\EntityInterface $acknowledgement)
{
    if (in_array("registrant", \Drupal::currentUser()->getRoles())) {
        $account = User::load(\Drupal::currentUser()->id());
        $account->set("field_payment_status", "PendingFinanceReview");
        $account->save();
    }
}

/**
 * Implements hook_theme().
 */
function rotary_events_main_theme()
{
    return [
        'rotary_events_main' => [
            'render element' => 'children',
        ],
        'registration_approval' => [
            'render element' => 'form',
            'template' => 'registration-approval-form',
        ],
        'single_registration_form' => [
            'template' => 'single-registration-form',
            'variables' => []
        ],
        'multiple_registration_form' => [
            'template' => 'multiple-registration-form',
            'variables' => []
        ],
        'programme_day_1' => [
            'template' => 'program-day-1',
            'variables' => []
        ],
        'programme_day_2' => [
            'template' => 'program-day-2',
            'variables' => []
        ],
        'programme_day_3' => [
            'template' => 'program-day-3',
            'variables' => []
        ],
        'header_menu_block' => [
            'variables' => [
                'content' => NULL,
                'isLoggedIn' => NULL,
                'status' => NULL,
            ],
            'render element' => 'children',
        ],
    ];
}

function rotary_events_main_form_alter(&$form, FormStateInterface $form_state, $form_id)
{
    if ($form_id == 'user_login_form') {
        $form["name"]["#title"] = "Login ID";
        $form["name"]["#description"] = "Enter your login ID provided in SMS.";
        $form["pass"]["#title"] = "Password";
        $form["pass"]["#description"] = "Enter the password provided in your SMS.";
        $form['forgot_password'] = [
            '#type' => 'link',
            '#title' => t('Forgot Password'),
            '#weight' => 96,
        ];
        $form["actions"]["reset_password"] = array(
            '#markup' => '<a href="/form/reset_password" class="btn btn-warning">Forgot Password</a>',
            '#weight' => 100,
        );
        //    \Drupal::logger('my_module')->notice('<pre><code>' . print_r($form, TRUE) . '</code></pre>');
    }
}


function rotary_events_main_page_attachments(array &$page)
{
    $page['#attached']['library'][] = 'rotary_events_main/rotary-events';
}
