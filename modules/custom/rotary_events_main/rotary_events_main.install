<?php 
use Drupal\Core\Field\BaseFieldDefinition;

function rotary_events_main_update_8001() {
  \Drupal::entityDefinitionUpdateManager()
      ->installEntityType(\Drupal::entityTypeManager()->getDefinition('user_deliverables_entity'));
}

function rotary_events_main_update_8002(){
  $field_storage_definition = BaseFieldDefinition::create('boolean')
     ->setLabel(t('Is User Checked In'))
      ->setDescription(t('A boolean indicating whether the user is checked in.'))
      ->setDefaultValue(null);
    \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('ischeckedin', 'user_deliverables_entity', 'user_deliverables_entity', $field_storage_definition);
}

function rotary_events_main_update_8003(){
  $field_storage_definition = BaseFieldDefinition::create('string_long')
      ->setLabel(t('Check In Data'))
      ->setDisplayOptions('view', [
        'label' => 'above',
        'type' => 'string',
        'weight' => -4,
      ])
      ->setDisplayOptions('form', [
        'type' => 'string_textfield',
        'weight' => -4,
      ])
      ->setDisplayConfigurable('form', TRUE)
      ->setDisplayConfigurable('view', TRUE);

    \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('checkindata', 'user_deliverables_entity', 'user_deliverables_entity', $field_storage_definition);
}

function rotary_events_main_update_8004(){
$entity_update_manager = \Drupal::entityDefinitionUpdateManager();
$entity_type = $entity_update_manager->getEntityType('user_deliverables_entity');
$entity_update_manager->uninstallEntityType($entity_type);
}

function rotary_events_main_update_8005() {
  \Drupal::entityDefinitionUpdateManager()
      ->installEntityType(\Drupal::entityTypeManager()->getDefinition('user_deliverables_entity'));
}


function rotary_events_main_update_8006(){
  $field_storage_definition = BaseFieldDefinition::create('list_string')
      ->setLabel(t('Food Counter'))
      ->setDescription(t('Food Counter.'))
      ->setSettings([
      'allowed_values' => [
        'veg' => 'veg',
        'nonveg' => 'nonveg',
      ],
    ]);
    \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('food_counter', 'user_deliverables_entity', 'user_deliverables_entity', $field_storage_definition);
}

function rotary_events_main_update_8007(){
  $field_storage_definition = BaseFieldDefinition::create('boolean')
    ->setLabel(t('Food Type Changed'))
    ->setDescription(t('A boolean indicating whether food type is changed.'))
    ->setDefaultValue(FALSE)
    ->setSettings(['on_label' => 'Yes', 'off_label' => 'No'])
    ->setDisplayOptions('view', [
      'label' => 'visible',
      'type' => 'boolean',
      'weight' => 2,
    ])
    ->setDisplayOptions('form', [
      'type' => 'boolean_checkbox',
      'weight' => 2,
    ])
    ->setDisplayConfigurable('view', TRUE)
    ->setDisplayConfigurable('form', TRUE);
    \Drupal::entityDefinitionUpdateManager()
    ->installFieldStorageDefinition('food_counter_changed', 'user_deliverables_entity', 'user_deliverables_entity', $field_storage_definition);
}
